const e=new TextDecoder("utf-8"),t=function e(t,r){let s=[];for(const r in t){const n=t[r].files;if(n){const t=e(n,r);s=s.concat(t)}s.push(r)}return s.map((e=>(r?r+"/":"")+e))};class r{constructor(r){const{header:s,buffer:n}=(t=>{if(t.length>Number.MAX_SAFE_INTEGER)throw new Error("Asar archive too large.");const r=16+new DataView(t).getUint32(12,!0),s=(i=r)+((c=4)-i%c)%c,n=t.slice(16,r),o=t.slice(s);var i,c;return{header:JSON.parse(e.decode(n)),buffer:o}})(r);this.header=s,this.buffer=n,this.contents=t(s)}find(e){return e.split("/").reduce(((t,r)=>{if(t.files){const n=t.files[r];if(!n){if("/"==e)return this.header;throw new s(e,`${r} could not be found.`)}return n}throw new s(e,`${r} is not a directory.`)}),this.header)}get(e){const{offset:t,size:r}=this.find(e),s=parseInt(t);return this.buffer.slice(s,s+r)}}class s extends Error{constructor(e,t){super(`Invalid path "${e}": ${t}`),this.name="PathError"}}export{r as default};
