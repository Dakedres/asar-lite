!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).Asar=t()}(this,(function(){"use strict";const e=new TextDecoder("utf-8"),t=function e(t,r){let n=[];for(const r in t){const s=t[r].files;if(s){const t=e(s,r);n=n.concat(t)}n.push(r)}return n.map((e=>(r?r+"/":"")+e))};class r extends Error{constructor(e,t){super(`Invalid path "${e}": ${t}`),this.name="PathError"}}return class{constructor(r){const{header:n,buffer:s}=(t=>{if(t.length>Number.MAX_SAFE_INTEGER)throw new Error("Asar archive too large.");const r=16+new DataView(t).getUint32(12,!0),n=(i=r)+((f=4)-i%f)%f,s=t.slice(16,r),o=t.slice(n);var i,f;return{header:JSON.parse(e.decode(s)),buffer:o}})(r);this.header=n,this.buffer=s,this.contents=t(n)}find(e){return e.split("/").reduce(((t,n)=>{if(t.files){const s=t.files[n];if(!s){if("/"==e)return this.header;throw new r(e,`${n} could not be found.`)}return s}throw new r(e,`${n} is not a directory.`)}),this.header)}get(e){const{offset:t,size:r}=this.find(e),n=parseInt(t);return this.buffer.slice(n,n+r)}}}));
